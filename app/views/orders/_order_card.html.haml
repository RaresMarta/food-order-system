.card.border-0.shadow-sm
  .card-header.bg-light
    .d-flex.justify-content-between.align-items-center
      .d-flex.align-items-center.gap-3
        %h5.mb-0 Order ##{order.id}
        %span.badge{class: order_status_badge_class(order.status)}= order.status.humanize
      .text-muted
        %small
          Placed on #{order.created_at.strftime("%B %d, %Y at %I:%M %p")}
          %br
          %strong Total: #{number_to_currency(order.total_price)}

  .card-body
    %h6.text-muted.mb-3 Items Ordered:
    - order.order_items.each do |item|
      .d-flex.justify-content-between.align-items-center.py-2.border-bottom
        .d-flex.align-items-center.gap-3
          .d-flex.justify-content-center.align-items-center.bg-light.rounded{style: "width: 50px; height: 50px;"}
            - if item.food_item.image.attached?
              = image_tag item.food_item.image, alt: item.food_item.name, class: "rounded", style: "width: 50px; height: 50px; object-fit: cover;"
            - else
              %small.text-muted No image
          %div
            %strong= item.food_item.name
            %br
            %small.text-muted #{number_to_currency(item.unit_price)} each
        %div.text-end
          %div Qty: #{item.quantity}
          %strong= number_to_currency(item.unit_price * item.quantity)

  .card-footer.bg-light
    .d-flex.justify-content-between.align-items-center
      %small.text-muted Payment Method: #{order.payment_method.humanize}
      = link_to "View Details", order_path(order), class: "btn btn-sm btn-outline-primary"
